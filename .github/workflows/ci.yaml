name: CI
on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
          POSTGRES_DB: petdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U app -d petdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: false
        env:
          TAR_OPTIONS: --skip-old-files

      - name: Install sqlc
        uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: '1.29.0'

      - name: Generate code with sqlc
        run: sqlc generate

      - name: Wait for Postgres to be healthy
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U app -d petdb && exit 0
            sleep 1
          done
          exit 1

      - name: Init DB schema
        run: |
          PSQL="psql postgresql://app:app@localhost:5432/petdb -v ON_ERROR_STOP=1"
          $PSQL -f db/schema.sql
          $PSQL -c '\dt'

      - name: Seed test data
        run: |
          psql postgresql://app:app@localhost:5432/petdb -v ON_ERROR_STOP=1 -f db/seed.sql


      # uncomment if you need seed data for tests
      # - name: Seed test data (optional)
      #  run: |
      #    psql postgresql://app:app@localhost:5432/petdb -c \
      #      "INSERT INTO users (email,name) VALUES ('demo@example.com','Demo') ON CONFLICT DO NOTHING;"

      - name: Build
        run: go build ./...

      - name: Test
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: app
          PGPASSWORD: app
          PGDATABASE: petdb
        run: go test -v ./...
